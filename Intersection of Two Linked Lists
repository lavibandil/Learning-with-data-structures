public class Solution {
    
    
    static int getLengthOfList(ListNode head)
    {
        int len=0;
        
        ListNode temp=head;
        
        while(temp!=null)
        {
            len++;
            temp=temp.next;
        }
        
        return len;
    }
    
    static ListNode getIntersection(int d, ListNode headA1, ListNode headB1)
    {
        while(d>0)
        {
            headA1=headA1.next;
            d--;
        }
        
        while(headA1!=null && headB1!=null)
        {
            if(headA1 == headB1 && headA1.val==headB1.val)
                return headA1;
            
            
            headA1=headA1.next;
            headB1=headB1.next;
        }
        
        return null;
        
    }
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        
        //Calculating length of both lists
        int lA= getLengthOfList(headA);
        int lB= getLengthOfList(headB);
        
        int diff= Math.abs(lA-lB);
        
        if(lA>lB)
        return getIntersection(diff,headA,headB);
        
        return getIntersection(diff,headB,headA);
        
        }
}
